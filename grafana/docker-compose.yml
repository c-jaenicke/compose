# GRAFANA DOCKER COMPOSE
# Deploys grafana, prometheus, optionally postgres exporter
# Joins internal docker network
# Creates internal grafana network
# Grafana:
#   data:   VOLUME grafana-data
# Prometheus:
#   config: /etc/prometheus/prometheus.yml
version: '3.8'

services:
  grafana:
    container_name: grafana-app
    image: grafana/grafana
    restart: unless-stopped
    expose:
      - 3000
    networks:
      - int-grafana-net
      - int-docker-net
    volumes: 
      - grafana-data:/var/lib/grafana
    environment:
    # TODO change domain here!
      - GF_SERVER_ROOT_URL=<DOMAIN HERE>
      - "TZ=Europe/Berlin"

  prometheus:
    container_name: grafana-prometheus
    image: prom/prometheus
    restart: unless-stopped
    expose:
      - 9090
    networks:
      - int-grafana-net
    volumes:
      - /etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    environment:
      - "TZ=Europe/Berlin"

# Optional: for monitoring postgres database
#  postgresexporter:
#    container_name: grafana-postgresexporter
#    image: quay.io/prometheuscommunity/postgres-exporter
#    restart: unless-stopped
#    expose:
#      - 9187
#    environment:
#      - DATA_SOURCE_NAME=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DB_ADDRESS}:5432/${POSTGRES_DB}?sslmode=disable
#      - "TZ=Europe/Berlin"

volumes:
  grafana-data:

networks:
  default:
     external: true
     name: int-docker-net
  int-grafana-net: