###########################################################################
# TRAEFIK CONFIGURATION FILE
# https://doc.traefik.io/traefik/
# Docker Container Labels: https://doc.traefik.io/traefik/providers/docker/#routing-configuration-with-labels
###########################################################################
global:
  checkNewVersion: true
  sendAnonymousUsage: false # true by default

# OBSERVABILITY
## LOGS
#log:
#  level: INFO  # DEBUG, INFO, WARNING, ERROR, CRITICAL
#  format: json  # common, json, logfmt
#  filePath: "/home/zincxenon/docker/traefik/logs/traefik.log"

## ACCESS LOGS
#accesslog:
#  format: common  # common, json, logfmt
#  filePath: "/home/zincxenon/docker/traefik/logs/access.log"

# OPERATIONS
## API DASHBOARD
api:
  # true by default
  dashboard: true
  # DISABLE IN PRODUCTION
  insecure: true

# ROUTING AND LOAD BALANCING
## ENTRYPOINTS
entryPoints:
  # HTTP
  web:
    address: ":80"
    # Redirect incoming HTTP traffic to HTTPS
    #http:
    #  redirections:
    #    entryPoint:
    #      to: websecure
    #      scheme: https

  # HTTPS
  websecure:
    address: ":443"

  # METRICS
  # to be scraped by Prometheus
  metrics:
    address: ":8081"

# MIDDLEWARES
# configure authelia middleware here
http:
  middlewares:
    authelia-basic:
      forwardAuth:
        address: "http://authelia:9091/api/verify?rd=https://auth.<DOMAIN.TLD HERE>"
        trustForwardHeader: true
        authResponseHeaders:
          - "Remote-User"
          - "Remote-Groups"
          - "Remote-Email"
          - "Remote-Name"
    authelia:
      forwardAuth:
        address: "http://authelia:9091/api/verify?rd=https://auth.<DOMAIN.TLD HERE>"
        trustForwardHeader: true
        authResponseHeaders:
          - Remote-User
          - Remote-Groups
          - Remote-Name
          - Remote-Email

# HTTPS AND TLS
## LETS ENCRYPT
# IMPORTANT NOTES
# Make sure to create ./certs/ and set permissions to 600 !
#
# When switching from STAGING to PRODUCTION certificate:
# Make sure to delete the acme.json, else no new certificate will be issued!
# This also means that every certificate will be reissued! Make sure to not get caught by rate limit
certificatesResolvers:
  staging:
    acme:
      email: <EMAIL OF ADMIN HERE, will be used to recieve certificate>
      storage: /etc/traefik/certs/acme.json
      caServer: "https://acme-staging-v02.api.letsencrypt.org/directory"
      httpChallenge:
        entryPoint: web

  production:
    acme:
      email: <EMAIL OF ADMIN HERE, will be used to recieve certificate>
      storage: /etc/traefik/certs/acme.json
      caServer: "https://acme-v02.api.letsencrypt.org/directory"
      httpChallenge:
        entryPoint: web

## TLS
# tls:
#   stores:
#     default:
#       defaultCertificate:
#         certFile: /etc/traefik/certs/cert.pem
#         keyFile: /etc/traefik/certs/cert-key.pem
# (Optional) Disable TLS version 1.0 and 1.1
#   options:
#     default:
#       minVersion: VersionTLS12

# CONFIGURATION DISCOVERY
providers:
  docker:
    # Dont expose containers by default, containers requires labels to be exposed
    # See https://doc.traefik.io/traefik/providers/docker/#routing-configuration-with-labels
    exposedByDefault: false
    # Set default network for exposed containers
    # If not set, traefik will choose a random network the container is in to route to it!
    # Possibly <CHANGE NETWORK NAME HERE>
    network: int-docker-net
  file:
    # watch for dynamic configuration changes
    directory: /etc/traefik
    watch: true

# METRICS
# https://doc.traefik.io/traefik/observability/metrics/overview/
## PROMETHEUS
metrics:
  prometheus:
    entryPoint: metrics
    addEntryPointsLabels: true
    addRoutersLabels: true
    addServicesLabels: true
