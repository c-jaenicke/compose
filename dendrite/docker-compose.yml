# DENDRITE MATRIX SERVER COMPOSE
# Deploys dendrite monolith and postgres
# Joins internal docker network
# Postgres:
#   database:   /etc/dendrite/postgres/
#   setup:      /etc/dendrite/postgres/create_db.sh
# Dendrite:
#   config:     /etc/dendrite/config
#   media:      /etc/dendrite/media
version: '3.8'

services:
  postgres:
    container_name: dendrite-postgres
    image: postgres:14
    restart: unless-stopped
    volumes:
      - /etc/dendrite/postgres/create_db.sh:/docker-entrypoint-initdb.d/20-create_db.sh
      - /etc/dendrite/postgres:/var/lib/postgresql/data
    environment:
      # possibly change username, make sure to update config too
      - POSTGRES_USER=dendrite
      - POSTGRES_PASSWORD=<PASSWORD HERE>
      - TZ="Europe/Berlin"
    networks:
      - int-dendrite-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dendrite"]
      interval: 5s
      timeout: 5s
      retries: 5

  dendrite-monolith:
    container_name: dendrite-monolith
    image: matrixdotorg/dendrite-monolith:latest
    restart: unless-stopped
    expose:
      - 8008
      - 8448
    volumes:
      - /etc/dendrite/config:/etc/dendrite
      - /etc/dendrite/media:/var/dendrite/media
    environment:
      TZ: 'Europe/Berlin'
    command: [
      "--tls-cert=server.crt",
      "--tls-key=server.key"
    ]
    depends_on:
      - postgres
    networks:
      - default
      - int-dendrite-net
#    labels:
    # enable treafik discovery
#      - traefik.enable=true
    # set entrypoint to http
#      - traefik.http.routers.<NAME>.entrypoints=web
    # set entrypoint to https
#      - traefik.http.routers.<NAME>.entrypoints=websecure
    # bind domain
#      - traefik.http.routers.<NAME>.rule=Host(`<DOMAIN>`)
    # enable tls
#      - traefik.http.routers.<NAME>.tls=true
    # set cert server
#      - traefik.http.routers.<NAME>.tls.certresolver=production
    # enable authelia for service, make sure service is in authelia config
#      - traefik.http.routers.changedetection.middlewares=authelia@file

networks:
  default:
     external: true
     name: int-docker-net
  int-dendrite-net: